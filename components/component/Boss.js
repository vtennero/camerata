/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/UdMnam06nkf
 */
"use client";
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar";
import { MicrophoneInput } from "../ui/MicrophoneInput";
import { MessageInput } from "../ui/MessageInput";
import { ChatArea } from "../ui/ChatArea";
import Navbar from "@/app/components/Navbar";
import { useEffect, useState } from "react";
import MobileAdvisorBanner from "../ui/MobileAdvisorBanner";

export function Boss() {
  const [processedText, setProcessedText] = useState("");
  const [refinedText, setRefinedText] = useState("");
  const [filename, setFilename] = useState("");

  useEffect(() => {
    generateFilename();
  }, []);

  const generateFilename = () => {
    const now = new Date();
    const timestamp = `${now.getFullYear()}${padZero(
      now.getMonth() + 1
    )}${padZero(now.getDate())}_${padZero(now.getHours())}${padZero(
      now.getMinutes()
    )}${padZero(now.getSeconds())}`;
    const persona = "therapist";
    const type = "log";
    const generatedFilename = `${persona}_${timestamp}_${type}.md`;
    setFilename(generatedFilename);
    console.log(generatedFilename);
  };

  const padZero = (num) => {
    return num.toString().padStart(2, "0");
  };

  const handleProcessedText = (text) => {
    console.log("Updating processed text with:", text);
    setProcessedText(text);
  };

  // This function is called by child components to update refined text
  const handleRefinedText = (text) => {
    console.log("Updating refined text with:", text);
    setRefinedText(text);
  };

  // useTextToSpeech(refinedText);

  //   return (
  //     <div>
  //       <Navbar />
  //       <MobileAdvisorBanner />
  //       <div key="1" className="flex flex-col h-screen w-full ">
  //         <div className="flex-1 ">
  //           <div className="flex h-[60vh] items-stretch">
  //             <div className="hidden md:flex w-[400px]">
  //               <div className="flex flex-col h-screen w-full ">
  //                 <div className="flex-1">
  //                   <div className="flex h-[30vh] items-stretch">
  //                     <div className="hidden md:flex w-[400px] ">
  //                       <div className="grid w-full grid-rows-[1fr]">
  //                         <div className="flex h-12 items-center p-4 " />
  //                         <div className="flex items-center justify-center p-4">
  //                           <Avatar className="w-32 h-32 border rounded-none">
  //                             <AvatarImage alt="Support Agent" src="atlas.jpg" />
  //                             <AvatarFallback>SA</AvatarFallback>
  //                           </Avatar>
  //                         </div>
  //                         <div className="text-center text-sm mt-2">
  //                           Support Agent
  //                         </div>
  //                       </div>
  //                     </div>
  //                     <div className="flex-1 flex flex-col" />
  //                   </div>
  //                 </div>
  //               </div>
  //             </div>
  //             <div className="flex-1 flex flex-col">
  //               <ChatArea
  //                 processedText={processedText}
  //                 refinedText={refinedText}
  //               />
  //               <div className="flex gap-2 p-4">
  //                 <MessageInput
  //                   onProcessedText={handleProcessedText}
  //                   onRefinedText={handleRefinedText}
  //                   persona="therapist"
  //                   filename={filename}
  //                 />

  //                 <MicrophoneInput />
  //               </div>
  //             </div>
  //           </div>
  //         </div>
  //       </div>
  //     </div>
  //   );
  // }
  return (
    <div className="flex flex-col h-screen">
      <Navbar />
      <MobileAdvisorBanner />
      <div key="1" className="flex flex-col flex-1">
        <div className="flex-1 overflow-y-auto">
          <ChatArea processedText={processedText} refinedText={refinedText} />
        </div>
        <div className="p-4 flex gap-2 items-center">
          <MessageInput
            onProcessedText={handleProcessedText}
            onRefinedText={handleRefinedText}
            persona="therapist"
            filename={filename}
          />
          <MicrophoneInput />
        </div>
      </div>
    </div>
  );
}
